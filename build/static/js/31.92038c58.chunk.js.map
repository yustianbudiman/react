{"version":3,"sources":["views/base/forms/ListUsers.js"],"names":["ListUsers","props","handleClose","bind","handleShow","handleChange","handleSubmit","state","error","isLoaded","items","modal","id_users","posts","e","this","setState","target","getAttribute","post","type","id","name","value","onChange","fetch","then","res","json","result","data","preventDefault","id_user","method","getdata","getBadge","token","xs","md","className","onClick","history","push","fields","itemsPerPage","pagination","scopedSlots","item","color","size","attr","show","onClose","closeButton","onSubmit","renderModal","React","Component"],"mappings":"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","file":"static/js/31.92038c58.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CInput,\n  CRow,\n  CDataTable,\n  CBadge,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nclass ListUsers extends React.Component {\n constructor(props) {\n  super(props);\n  this.handleClose = this.handleClose.bind(this);\n  this.handleShow = this.handleShow.bind(this);\n  this.handleChange = this.handleChange.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      modal:false,\n      id_users:'',\n      posts: []\n    };\n }\n // const [data, setData] = useState([]);\n handleChange(e) {\n  this.setState({id_users: ''});\n  // this.setState({hf_password: e.target.value});\n  // this.setState({\n  //       [e.target.name]: e.target.value\n  //   });\n }\n\n handleClose(e){\n   this.setState({\n     modal: false,\n     id_users:''\n   });\n }\n\n handleShow(e){\n   this.setState({\n     modal: true,\n     id_users:e.target.getAttribute('attr')\n   });\n  }\n\n  renderModal(e){\n    if (this.state.id_users !== '') {\n    const post = this.state.id_users;\n    return (\n         <div>\n           <CInput type=\"hidden\" id=\"id_user\" name=\"id_user\" value={post} onChange={this.handleChange}/>\n         </div>\n       );\n     }\n  }\n\n\n componentDidMount() {\n fetch(\"http://localhost:8000/users\")\n       .then(res => res.json())\n       .then(\n         (result) => {\n           this.setState({\n             isLoaded: true,\n             items: result.data\n           });\n         },\n         (error) => {\n           this.setState({\n             isLoaded: true,\n             error\n           });\n         }\n       )\n     }\n\ngetdata(){\n  fetch(\"http://localhost:8000/users\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              items: result.data\n            });\n          },\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )\n}\n\n\n handleSubmit(e) {\n  e.preventDefault();\n  fetch('http://localhost:8000/users/'+e.target.id_user.value, {\n      method: 'DELETE'\n    }).then(\n      (result) => {\n        this.getdata();\n        this.handleClose();\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    );\n}\n\n\n\n render() {\n   const {items } = this.state;\n   const {modal} = this.state;\n   const getBadge = token => {\n     switch (token) {\n       case 'Active': return 'success'\n       case 'Inactive': return 'secondary'\n       case 'Pending': return 'warning'\n       case 'Banned': return 'danger'\n       default: return 'primary'\n     }\n   }\n   const fields = ['user','password', 'token','aksi']\n\n  return(\n    <CRow>\n      <CCol xs=\"12\" md=\"12\">\n        <CCard>\n          <CCardHeader>\n            List\n            <small> Users</small>\n          </CCardHeader>\n          <CCardBody>\n          <CButton className=\"btn-facebook btn-brand mr-1 mb-1\" onClick={() => {\n        this.props.history.push('list/add')\n   }}>Add</CButton>\n          <CDataTable\n            items={items}\n            fields={fields}\n            itemsPerPage={5}\n            pagination\n            scopedSlots = {{\n              'token':\n                (item)=>(\n                  <td>\n                    <CBadge color={getBadge(item.token)}>\n                      {item.token}\n                    </CBadge>\n                  </td>\n                ),\n              'aksi':\n            (item)=>(<td><CButton onClick={this.handleShow} size=\"sm\" attr={item.id} className=\"btn-facebook btn-brand mr-1 mb-1\" >Delete</CButton></td>)\n            }}\n          />\n\n          <CModal\n            color=\"warning\"\n            show={modal}\n            onClose={this.handleClose}\n            size=\"sm\"\n          >\n            <CModalHeader closeButton>\n              <CModalTitle>Delete</CModalTitle>\n            </CModalHeader>\n            <CForm onSubmit={this.handleSubmit}>\n            <CModalBody>\n              Apakah Anda Yakin?\n              {this.renderModal()}\n            </CModalBody>\n\n            <CModalFooter>\n              <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton>\n              <CButton\n                color=\"secondary\"\n                onClick={this.handleClose}\n              >Cancel</CButton>\n            </CModalFooter>\n            </CForm>\n          </CModal>\n\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n }\n}\nexport default ListUsers;\n"],"sourceRoot":""}