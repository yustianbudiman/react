{"version":3,"sources":["views/base/forms/FormUser.js"],"names":["FormUser","props","state","hf_email","hf_password","handleChange","bind","handleSubmit","error","isLoaded","e","this","setState","target","name","value","fetch","then","res","json","result","items","data","preventDefault","method","headers","Accept","body","JSON","stringify","user","password","token","getdata","xs","md","onSubmit","row","htmlFor","type","id","placeholder","autoComplete","email","onChange","className","size","color","React","Component"],"mappings":"gRAgBMA,E,kDACL,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAACC,SAAU,GAAGC,YAAY,IACvC,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKJ,MAAQ,CACTM,MAAO,KACPC,UAAU,GAPI,E,yDAWNC,GAGZC,KAAKC,SAAL,eACOF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,U,0CAIZ,IAAD,OACpBC,MAAM,+BACCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKR,SAAS,CACZH,UAAU,EACVY,MAAOD,EAAOE,UAGlB,SAACd,GACC,EAAKI,SAAS,CACZH,UAAU,EACVD,e,gCAMH,IAAD,OACPQ,MAAM,+BACCC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,EAAKR,SAAS,CACZH,UAAU,EACVY,MAAOD,EAAOE,UAGlB,SAACd,GACC,EAAKI,SAAS,CACZH,UAAU,EACVD,e,mCAODE,GAAI,IAAD,OACfA,EAAEa,iBACHP,MAAM,8BAA+B,CACnCQ,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,KAAMpB,EAAEG,OAAOV,SAASY,MACxBgB,SAAUrB,EAAEG,OAAOT,YAAYW,MAC/BiB,MAAO,aAERf,MACD,SAACG,GACC,EAAKa,aAEP,SAACzB,GACC,EAAKI,SAAS,CACZH,UAAU,EACVD,e,+BAMJ,OACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAM0B,GAAG,KAAKC,GAAG,MACf,kBAAC,IAAD,KACE,kBAAC,IAAD,YAEE,+CAEF,kBAAC,IAAD,CAAOC,SAAUzB,KAAKJ,cACtB,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAY8B,KAAG,GACb,kBAAC,IAAD,CAAMF,GAAG,KACP,kBAAC,IAAD,CAAQG,QAAQ,YAAhB,UAEF,kBAAC,IAAD,CAAMJ,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,CAAQI,KAAK,QAAQC,GAAG,WAAW1B,KAAK,WAAW2B,YAAY,iBAAiBC,aAAa,QAAQ3B,MAAOJ,KAAKT,MAAMyC,MAAOC,SAAUjC,KAAKN,eAC7I,kBAAC,IAAD,CAAWwC,UAAU,cAArB,6BAGJ,kBAAC,IAAD,CAAYR,KAAG,GACb,kBAAC,IAAD,CAAMF,GAAG,KACP,kBAAC,IAAD,CAAQG,QAAQ,eAAhB,aAEF,kBAAC,IAAD,CAAMJ,GAAG,KAAKC,GAAG,KACf,kBAAC,IAAD,CAAQI,KAAK,WAAWC,GAAG,cAAc1B,KAAK,cAAc2B,YAAY,oBAAoBC,aAAa,mBAAmB3B,MAAOJ,KAAKT,MAAM6B,SAAUa,SAAUjC,KAAKN,eACvK,kBAAC,IAAD,CAAWwC,UAAU,cAArB,iCAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASN,KAAK,SAASO,KAAK,KAAKC,MAAM,WAAU,kBAAC,IAAD,CAAOjC,KAAK,iBAA7D,WADF,IACkG,kBAAC,IAAD,CAASyB,KAAK,QAAQO,KAAK,KAAKC,MAAM,UAAS,kBAAC,IAAD,CAAOjC,KAAK,YAA3D,mB,GAnHrFkC,IAAMC,WA4HdjD","file":"static/js/29.8b5c00a0.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInput,\r\n  CLabel,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\nclass FormUser extends React.Component {\r\n constructor(props) {\r\n  super(props);\r\n  this.state = {hf_email: '',hf_password:''};\r\n  this.handleChange = this.handleChange.bind(this);\r\n  this.handleSubmit = this.handleSubmit.bind(this);\r\n  this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n    };\r\n }\r\n // const [data, setData] = useState([]);\r\n handleChange(e) {\r\n  // this.setState({id_users: ''});\r\n  // this.setState({hf_password: e.target.value});\r\n  this.setState({\r\n        [e.target.name]: e.target.value\r\n    });\r\n }\r\n\r\n componentDidMount() {\r\n fetch(\"http://localhost:8000/users\")\r\n       .then(res => res.json())\r\n       .then(\r\n         (result) => {\r\n           this.setState({\r\n             isLoaded: true,\r\n             items: result.data\r\n           });\r\n         },\r\n         (error) => {\r\n           this.setState({\r\n             isLoaded: true,\r\n             error\r\n           });\r\n         }\r\n       )\r\n     }\r\n\r\ngetdata(){\r\n  fetch(\"http://localhost:8000/users\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result.data\r\n            });\r\n          },\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n}\r\n\r\n\r\nhandleSubmit(e) {\r\n e.preventDefault();\r\nfetch('http://localhost:8000/users', {\r\n  method: 'POST',\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json'\r\n  },\r\n  body: JSON.stringify({\r\n    user: e.target.hf_email.value,\r\n    password: e.target.hf_password.value,\r\n    token: 'Active'\r\n  })\r\n}).then(\r\n  (result) => {\r\n    this.getdata();\r\n  },\r\n  (error) => {\r\n    this.setState({\r\n      isLoaded: true,\r\n      error\r\n    });\r\n  }\r\n);\r\n}\r\n render() {\r\n  return(\r\n    <CRow>\r\n      <CCol xs=\"12\" md=\"12\">\r\n        <CCard>\r\n          <CCardHeader>\r\n            Form\r\n            <small> Input User</small>\r\n          </CCardHeader>\r\n          <CForm onSubmit={this.handleSubmit}>\r\n          <CCardBody>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"hf-email\">Email</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput type=\"email\" id=\"hf-email\" name=\"hf_email\" placeholder=\"Enter Email...\" autoComplete=\"email\" value={this.state.email} onChange={this.handleChange}/>\r\n              <CFormText className=\"help-block\">Please enter your email</CFormText>\r\n            </CCol>\r\n          </CFormGroup>\r\n          <CFormGroup row>\r\n            <CCol md=\"3\">\r\n              <CLabel htmlFor=\"hf-password\">Password</CLabel>\r\n            </CCol>\r\n            <CCol xs=\"12\" md=\"9\">\r\n              <CInput type=\"password\" id=\"hf-password\" name=\"hf_password\" placeholder=\"Enter Password...\" autoComplete=\"current-password\" value={this.state.password} onChange={this.handleChange}/>\r\n              <CFormText className=\"help-block\">Please enter your password</CFormText>\r\n            </CCol>\r\n          </CFormGroup>\r\n          </CCardBody>\r\n          <CCardFooter>\r\n            <CButton type=\"submit\" size=\"sm\" color=\"primary\"><CIcon name=\"cil-scrubber\" /> Submit</CButton> <CButton type=\"reset\" size=\"sm\" color=\"danger\"><CIcon name=\"cil-ban\" /> Reset</CButton>\r\n          </CCardFooter>\r\n          </CForm>\r\n        </CCard>\r\n      </CCol>\r\n    </CRow>\r\n  );\r\n }\r\n}\r\nexport default FormUser;\r\n"],"sourceRoot":""}